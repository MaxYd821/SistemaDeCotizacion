// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeCotizacion.Data;

#nullable disable

namespace SistemaDeCotizacion.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250906034937_primeraMigracion")]
    partial class primeraMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"));

                    b.Property<string>("correoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccionCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("fechaRegistroCliente")
                        .HasColumnType("date");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ruc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefonoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCliente");

                    b.HasIndex("idUsuario");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cotizacion", b =>
                {
                    b.Property<int>("idCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCotizacion"));

                    b.Property<double>("costoRepuestosTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<double>("costoServicioTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<string>("estadoCotizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("formaPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<int>("tiempoEntrega")
                        .HasColumnType("int");

                    b.HasKey("idCotizacion");

                    b.HasIndex("idCliente");

                    b.ToTable("Cotizaciones");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.DetalleRepuesto", b =>
                {
                    b.Property<int>("idDetalleRepuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetalleRepuesto"));

                    b.Property<int>("cantidadRepuesto")
                        .HasColumnType("int");

                    b.Property<DateOnly>("fechaDetalleRepuesto")
                        .HasColumnType("date");

                    b.Property<int>("idCotizacion")
                        .HasColumnType("int");

                    b.Property<int>("idRepuesto")
                        .HasColumnType("int");

                    b.Property<double>("valorVenta")
                        .HasColumnType("float");

                    b.HasKey("idDetalleRepuesto");

                    b.HasIndex("idCotizacion");

                    b.HasIndex("idRepuesto");

                    b.ToTable("DetalleRepuestos");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.DetalleServicio", b =>
                {
                    b.Property<int>("idDetalleServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetalleServicio"));

                    b.Property<DateOnly>("fechaServicio")
                        .HasColumnType("date");

                    b.Property<int>("idCotizacion")
                        .HasColumnType("int");

                    b.Property<int>("idServicio")
                        .HasColumnType("int");

                    b.HasKey("idDetalleServicio");

                    b.HasIndex("idCotizacion");

                    b.HasIndex("idServicio");

                    b.ToTable("DetalleServicios");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Ingreso", b =>
                {
                    b.Property<int>("idIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idIngreso"));

                    b.Property<double>("costoIngreso")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<string>("detalleIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("fechaIngreso")
                        .HasColumnType("date");

                    b.Property<DateOnly>("fechaRegistroIngreso")
                        .HasColumnType("date");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<string>("tipoIngreso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idIngreso");

                    b.HasIndex("idUsuario");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Repuesto", b =>
                {
                    b.Property<int>("idRepuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRepuesto"));

                    b.Property<string>("codigoRepuesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("fechaRegistroRepuesto")
                        .HasColumnType("date");

                    b.Property<string>("medidaRepuesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precioRepuesto")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.HasKey("idRepuesto");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Rol", b =>
                {
                    b.Property<int>("rol_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rol_id"));

                    b.Property<string>("rol_descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rol_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rol_id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Servicio", b =>
                {
                    b.Property<int>("idServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idServicio"));

                    b.Property<DateOnly>("fechaRegistroServicio")
                        .HasColumnType("date");

                    b.Property<string>("nombreServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precioServicio")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.HasKey("idServicio");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("fechaNacimineto")
                        .HasColumnType("date");

                    b.Property<DateOnly>("fechaRegistro")
                        .HasColumnType("date");

                    b.Property<int>("idRol")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.HasIndex("idRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Vehiculo", b =>
                {
                    b.Property<int>("idVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idVehiculo"));

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<int>("kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idVehiculo");

                    b.HasIndex("idCliente");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cliente", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Usuario", "Usuario")
                        .WithMany("clientes")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cotizacion", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Cliente", "Cliente")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.DetalleRepuesto", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Cotizacion", "Cotizacion")
                        .WithMany("detalleRepuesto")
                        .HasForeignKey("idCotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeCotizacion.Models.Repuesto", "Repuesto")
                        .WithMany("detalleRepuesto")
                        .HasForeignKey("idRepuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.DetalleServicio", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Cotizacion", "Cotizacion")
                        .WithMany("detalleServicio")
                        .HasForeignKey("idCotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeCotizacion.Models.Servicio", "Servicio")
                        .WithMany("detalleServicio")
                        .HasForeignKey("idServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Ingreso", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Usuario", "Usuario")
                        .WithMany("ingresos")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Usuario", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("idRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Vehiculo", b =>
                {
                    b.HasOne("SistemaDeCotizacion.Models.Cliente", "Cliente")
                        .WithMany("Vehiculos")
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cliente", b =>
                {
                    b.Navigation("Cotizaciones");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Cotizacion", b =>
                {
                    b.Navigation("detalleRepuesto");

                    b.Navigation("detalleServicio");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Repuesto", b =>
                {
                    b.Navigation("detalleRepuesto");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Servicio", b =>
                {
                    b.Navigation("detalleServicio");
                });

            modelBuilder.Entity("SistemaDeCotizacion.Models.Usuario", b =>
                {
                    b.Navigation("clientes");

                    b.Navigation("ingresos");
                });
#pragma warning restore 612, 618
        }
    }
}
